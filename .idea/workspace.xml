<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="db5a1059-f875-42ae-b164-cfdf2dd982d9" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/apiproject.exe" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/apiproject.tar.gz" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/conf/app.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/conf/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/constant/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/constant/cmd.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/constant/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/constant/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/constant/redis.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/controllers/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/controllers/user.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/go.sum" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/log/location.2023-10-19.001.log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/log/location.log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/log/logger.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/models/object.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/models/user.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/routers/router.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/swagger/swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/swagger/swagger.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/beego_demo/apiproject/tests/default_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gin_learn/log/system.log" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/interface_use.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/point_use.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/regular/m.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/struct_use.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/反射/反射设置值.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/反射/结构体反射.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/反射/获取变量类型和值.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/找素数.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/数据类型/只读只写管道.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/bufioRead.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/file.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/fileRead.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/ioutilRead.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/main.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/读取文件/写入数据.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/锁/struct 锁.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/锁/互斥锁.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/锁/读写锁.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/.idea/awesomeProject.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/JwtUse.go" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/JwtUse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/gormUse.go" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/gormUse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/log/system.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/log/system.log.20210709.log" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/log/system.log.20210709.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/gin_learn/middle/Logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/gin_learn/middle/Logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/go.sum" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/arrays用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/baidu_spider.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/func用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/map用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/struct用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/testpackage.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/基本数据类型.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/循环for.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/指针.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/awesomeProject/otherpackage/接口.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/channel用法/channel-buffering.go" beforeDir="false" afterPath="$PROJECT_DIR$/channel用法/channel-buffering.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/channel用法/channel-synchronization.go" beforeDir="false" afterPath="$PROJECT_DIR$/channel用法/channel-synchronization.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/channel用法/channels用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/channel用法/channels用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/channel用法/non-blocking-channel-operations.go" beforeDir="false" afterPath="$PROJECT_DIR$/channel用法/non-blocking-channel-operations.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/channel用法/worker-pools.go" beforeDir="false" afterPath="$PROJECT_DIR$/channel用法/worker-pools.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/defer用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/defer用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/for循环.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/for循环.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/go-nil.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/go-nil.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/goroutines用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/goroutines用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/go的方法函数.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/go的方法函数.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/if用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/if用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/json用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/json用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/logical-operation.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/logical-operation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/packagenew/testPackage.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/packagenew/testPackage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/panic用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/panic用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/range用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/range用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/request_module.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/request_module.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/sorting-by-functions.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/sorting-by-functions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/sort排序.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/sort排序.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/switch用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/switch用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/time.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/time.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/values.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/values.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/variables.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/variables.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/使用error.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/使用error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/函数闭包.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/函数闭包.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/判断类型.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/判断类型.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/可变参数函数.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/可变参数函数.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/多个函数返回值.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/多个函数返回值.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/指针.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/指针.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/递归.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/递归.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/常用/随机数.go" beforeDir="false" afterPath="$PROJECT_DIR$/regular/随机数.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/数据类型/arrays用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/数据类型/arrays用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/数据类型/list用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/数据类型/链表.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/数据类型/map dict用法.go" beforeDir="false" afterPath="$PROJECT_DIR$/数据类型/map dict用法.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/数据类型/slices.go" beforeDir="false" afterPath="$PROJECT_DIR$/数据类型/slices.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/interface用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/struct用法.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/struct的method.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/多态(接口).go" beforeDir="false" afterPath="$PROJECT_DIR$/多态(接口).go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/封装.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/面向对象/继承.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://D:/gosdk/sdk/go1.18" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1gyxJ5fDXnvOOPb4AcMC2y0PYjv" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go Application" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="true" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/beego_demo/apiproject/conf" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\wxw\Desktop\go\beego_demo\apiproject\conf" />
      <recent name="C:\Users\wxw\Desktop\go\beego_demo\apiproject" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\wxw\Desktop\go" />
      <recent name="D:\goProject\awesomeProject\otherpackage" />
      <recent name="D:\goProject\常用" />
      <recent name="D:\goProject\数据类型" />
      <recent name="D:\goProject\channel用法" />
    </key>
  </component>
  <component name="RestClientSettings">
    <option name="REQUEST_HISTORY">
      <list>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:8080/long_async" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://httpbin.org/ip" />
          <option name="urlPath" value="" />
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:8080/long_sync" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build goProject/读取文件 (1)">
    <configuration name="go build 结构体反射.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/反射/结构体反射.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build 获取变量类型和值.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/反射/获取变量类型和值.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build fileRead.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="goProject/读取文件" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/读取文件/fileRead.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build goProject/读取文件 (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="goProject/读取文件" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/读取文件/写入数据.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build goProject/读取文件" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="goProject/读取文件" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/读取文件/bufioRead.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ioutilRead.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="goProject" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/读取文件/ioutilRead.go" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build 结构体反射.go" />
      <item itemvalue="Go Build.go build fileRead.go" />
      <item itemvalue="Go Build.go build goProject/读取文件" />
      <item itemvalue="Go Build.go build ioutilRead.go" />
      <item itemvalue="Go Build.go build goProject/读取文件 (1)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build goProject/读取文件 (1)" />
        <item itemvalue="Go Build.go build ioutilRead.go" />
        <item itemvalue="Go Build.go build goProject/读取文件" />
        <item itemvalue="Go Build.go build fileRead.go" />
        <item itemvalue="Go Build.go build fileRead.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.io,direct" />
      </map>
    </environment>
  </component>
</project>